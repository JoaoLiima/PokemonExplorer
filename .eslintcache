[{"C:\\treino\\pokemon\\src\\App.tsx":"1","C:\\treino\\pokemon\\src\\index.tsx":"2","C:\\treino\\pokemon\\src\\styles\\global.ts":"3","C:\\treino\\pokemon\\src\\pages\\Dashboard\\index.tsx":"4","C:\\treino\\pokemon\\src\\pages\\Dashboard\\style.ts":"5","C:\\treino\\pokemon\\src\\services\\api.ts":"6","C:\\treino\\pokemon\\src\\pages\\Pokemon\\index.tsx":"7","C:\\treino\\pokemon\\src\\pages\\Pokemon\\style.ts":"8","C:\\treino\\pokemon\\src\\routes\\index.tsx":"9","C:\\treino\\pokemon\\src\\pages\\Dashboard\\images.ts":"10"},{"size":314,"mtime":1607109599582,"results":"11","hashOfConfig":"12"},{"size":198,"mtime":1607015517294,"results":"13","hashOfConfig":"12"},{"size":612,"mtime":1607114993686,"results":"14","hashOfConfig":"12"},{"size":3878,"mtime":1607182764412,"results":"15","hashOfConfig":"12"},{"size":1346,"mtime":1607021303221,"results":"16","hashOfConfig":"12"},{"size":128,"mtime":1607021439210,"results":"17","hashOfConfig":"12"},{"size":2615,"mtime":1607182053853,"results":"18","hashOfConfig":"12"},{"size":1242,"mtime":1607182247849,"results":"19","hashOfConfig":"12"},{"size":363,"mtime":1607109119164,"results":"20","hashOfConfig":"12"},{"size":1125,"mtime":1611603947677,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16qy3mp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\treino\\pokemon\\src\\App.tsx",[],"C:\\treino\\pokemon\\src\\index.tsx",[],["46","47","48","49","50"],"C:\\treino\\pokemon\\src\\styles\\global.ts",["51"],"C:\\treino\\pokemon\\src\\pages\\Dashboard\\index.tsx",["52"],"import React, { useState, useEffect, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FiChevronRight } from 'react-icons/fi';\nimport logoImg from '../../assets/logo.png';\nimport Images from './images';\n\nimport { Title, Form, Pokemons } from './style';\n\nimport api from '../../services/api';\n\ninterface Pokemon {\n  name: string;\n  order: number;\n  sprites: {\n    front_default: string;\n  };\n  types: [];\n}\n\ninterface Item {\n  type: {\n    name: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newPokemon, setNewPokemon] = useState('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@PokemonExplorer:pokemons',\n    );\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('@PokemonExplorer:pokemons', JSON.stringify(pokemons));\n  }, [pokemons]);\n\n  async function handleAddPokemon(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    try {\n      const response = await api.get(`${newPokemon}`);\n\n      setPokemons([...pokemons, response.data]);\n      setNewPokemon('');\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function typeImage(type: string) {\n    switch (type) {\n      case 'bug':\n        return <img src={Images.bug} alt=\"Pokemon type\" />;\n      case 'dark':\n        return <img src={Images.dark} alt=\"Pokemon type\" />;\n      case 'dragon':\n        return <img src={Images.dragon} alt=\"Pokemon type\" />;\n      case 'electric':\n        return <img src={Images.electric} alt=\"Pokemon type\" />;\n      case 'fairy':\n        return <img src={Images.fairy} alt=\"Pokemon type\" />;\n      case 'fighting':\n        return <img src={Images.fighting} alt=\"Pokemon type\" />;\n      case 'fire':\n        return <img src={Images.fire} alt=\"Pokemon type\" />;\n      case 'flying':\n        return <img src={Images.flying} alt=\"Pokemon type\" />;\n      case 'ghost':\n        return <img src={Images.ghost} alt=\"Pokemon type\" />;\n      case 'grass':\n        return <img src={Images.grass} alt=\"Pokemon type\" />;\n      case 'ground':\n        return <img src={Images.ground} alt=\"Pokemon type\" />;\n      case 'ice':\n        return <img src={Images.ice} alt=\"Pokemon type\" />;\n      case 'normal':\n        return <img src={Images.normal} alt=\"Pokemon type\" />;\n      case 'poison':\n        return <img src={Images.poison} alt=\"Pokemon type\" />;\n      case 'psychic':\n        return <img src={Images.psychic} alt=\"Pokemon type\" />;\n      case 'rock':\n        return <img src={Images.rock} alt=\"Pokemon type\" />;\n      case 'steel':\n        return <img src={Images.steel} alt=\"Pokemon type\" />;\n      case 'water':\n        return <img src={Images.water} alt=\"Pokemon type\" />;\n      default:\n        return <p>{type}</p>;\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Pokemon Explorer\" />\n      <Title>Explore pokemons no Pokemon Database</Title>\n\n      <Form onSubmit={handleAddPokemon}>\n        <input\n          value={newPokemon}\n          onChange={e => setNewPokemon(e.target.value)}\n          placeholder=\"Digite aqui\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Pokemons>\n        {pokemons.map(pokemon => {\n          const type: Item[] = pokemon.types;\n          return (\n            <Link key={pokemon.order} to={`pokemon/${pokemon.name}`}>\n              <img\n                src={pokemon.sprites.front_default}\n                alt={`Sprite of ${pokemon.name}`}\n              />\n              <div>\n                <strong>{pokemon.name}</strong>\n                <p>{typeImage(type[0].type.name)}</p>\n              </div>\n              <FiChevronRight size={20} />\n            </Link>\n          );\n        })}\n      </Pokemons>\n    </>\n  );\n};\n\nexport default Dashboard;\n","C:\\treino\\pokemon\\src\\pages\\Dashboard\\style.ts",[],["53","54","55","56","57"],"C:\\treino\\pokemon\\src\\services\\api.ts",[],"C:\\treino\\pokemon\\src\\pages\\Pokemon\\index.tsx",[],["58","59","60","61","62"],"C:\\treino\\pokemon\\src\\pages\\Pokemon\\style.ts",[],"C:\\treino\\pokemon\\src\\routes\\index.tsx",[],"C:\\treino\\pokemon\\src\\pages\\Dashboard\\images.ts",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":54,"column":7,"nodeType":"79","messageId":"80","endLine":54,"endColumn":18},{"ruleId":"63","replacedBy":"81"},{"ruleId":"65","replacedBy":"82"},{"ruleId":"67","replacedBy":"83"},{"ruleId":"69","replacedBy":"84"},{"ruleId":"71","replacedBy":"85"},{"ruleId":"63","replacedBy":"86"},{"ruleId":"65","replacedBy":"87"},{"ruleId":"67","replacedBy":"88"},{"ruleId":"69","replacedBy":"89"},{"ruleId":"71","replacedBy":"90"},"lines-around-directive",["91"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected",["91"],[],[],[],[],["91"],[],[],[],[],"padding-line-between-statements"]